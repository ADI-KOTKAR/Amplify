Index: Pages/HomePage/Components/header.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nimport pyglet\r\nimport tkinter.font as tkfont\r\n\r\n\r\nclass Header(tk.Frame):\r\n    def __init__(self, master, text, *args, **kwargs):\r\n        tk.Frame.__init__(self, master, *args, **kwargs)\r\n        self['background'] = '#000000'\r\n        self['padx'] = 25\r\n\r\n        pyglet.font.add_file('fonts/Play/Play-Bold.ttf')\r\n        play = tkfont.Font(family=\"Play\", size=25, weight=\"bold\")\r\n\r\n        self.label = tk.Label(self,\r\n                              text=text,\r\n                              font=play,\r\n                              background='#000000',\r\n                              foreground='white')\r\n        self.label.grid(row=0, column=0)\r\n\r\n        self.grid_columnconfigure(0, weight=1)\r\n        self.grid_rowconfigure(0, weight=1)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Pages/HomePage/Components/header.py	(revision 7eb6434908ca1554e676a258963c566d3146a355)
+++ Pages/HomePage/Components/header.py	(date 1586875097719)
@@ -19,5 +19,5 @@
                               foreground='white')
         self.label.grid(row=0, column=0)
 
-        self.grid_columnconfigure(0, weight=1)
+        # self.grid_columnconfigure(0, weight=1)
         self.grid_rowconfigure(0, weight=1)
Index: Pages/HomePage/Components/HorizontalFrame.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nimport pyglet\r\nimport tkinter.font as tkfont\r\nfrom Pages.Resource.HorizontalScrollableFrame import HorizontalScrollableFrame\r\n\r\n\r\nclass HorizontalFrame(tk.Frame):\r\n    def __init__(self, master, text, *args, **kwargs):\r\n        tk.Frame.__init__(self, master, *args, **kwargs)\r\n        self['background'] = '#181818'\r\n        self['padx'] = 20\r\n        self['pady'] = 20\r\n\r\n        self.upper = Upper(self, text)\r\n        self.line = tk.Frame(self, background='#ffffff')\r\n        self.lower = Lower(self)\r\n\r\n        self.upper.grid(row=0, column=0, sticky=tk.N+tk.S+tk.E+tk.W)\r\n        self.line.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.lower.grid(row=2, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n\r\n        self.grid_columnconfigure(0, weight=1)\r\n        self.grid_rowconfigure((0, 1, 2), weight=1)\r\n\r\n    def right(self):\r\n        self.lower.scrollable.right()\r\n\r\n    def left(self):\r\n        self.lower.scrollable.left()\r\n\r\n\r\nclass Upper(tk.Frame):\r\n    def __init__(self, master, text, *args, **kwargs):\r\n        tk.Frame.__init__(self, master, *args, **kwargs)\r\n        self['background'] = '#181818'\r\n        self.master = master\r\n\r\n        pyglet.font.add_file('fonts/Play/Play-Bold.ttf')\r\n        play = tkfont.Font(family=\"Play\", size=15, weight=\"bold\")\r\n\r\n        self.left = tk.PhotoImage(file=r'.\\images\\left_arrow.png')\r\n        self.right = tk.PhotoImage(file=r'.\\images\\right_arrow.png')\r\n\r\n        self.label = tk.Label(self,\r\n                              text=text,\r\n                              font=play,\r\n                              anchor=tk.W,\r\n                              background='#181818',\r\n                              foreground='white')\r\n\r\n        self.left_button = ArrowButton(self, image=self.left, command=master.left)\r\n        self.right_button = ArrowButton(self, image=self.right, command=master.right)\r\n\r\n        self.left_button.grid(row=0, column=1, sticky=tk.N+tk.S+tk.E+tk.W)\r\n        self.right_button.grid(row=0, column=2, sticky=tk.N + tk.S + tk.E + tk.W)\r\n\r\n        self.label.grid(row=0, column=0, sticky=tk.N+tk.S+tk.E+tk.W)\r\n\r\n        self.grid_rowconfigure(0, weight=1)\r\n        self.grid_columnconfigure(0, weight=100)\r\n        self.grid_columnconfigure((1, 2), weight=1)\r\n\r\n\r\nclass Lower(tk.Frame):\r\n    def __init__(self, master, *args, **kwargs):\r\n        tk.Frame.__init__(self, master, *args, **kwargs)\r\n        self['background'] = '#181818'\r\n        self['pady'] = 10\r\n        self.bind('<Configure>', self.size)\r\n        self.Ed_sheeran = tk.PhotoImage(file='images/Ed_sheeran.png')\r\n\r\n        self.scrollable = HorizontalScrollableFrame(self)\r\n        self.frame = tk.Frame(self.scrollable.scrollable_frame, bg='#181818')\r\n\r\n        for i in range(9):\r\n            self.button1 = CardButton(self.frame, text='{} \\n hello'.format(i),\r\n                                      image=self.Ed_sheeran\r\n                                      )\r\n            self.button1.grid(row=0, column=i, padx=(0, 10))\r\n\r\n        self.frame.grid(row=0, column=0, sticky='nsew')\r\n\r\n        self.scrollable.grid(row=0, column=0, sticky=tk.W + tk.E)\r\n\r\n        self.grid_columnconfigure(0, weight=1)\r\n        self.grid_rowconfigure(0, weight=1)\r\n\r\n    def size(self, event):\r\n        global width\r\n        width = event.width\r\n        print(width)\r\n\r\n\r\nclass ArrowButton(tk.Button):\r\n    def __init__(self, master, *args, **kwargs):\r\n        tk.Button.__init__(self, master, *args, **kwargs)\r\n        self['relief'] = tk.FLAT\r\n        self['background'] = '#181818'\r\n        self['foreground'] = 'white'\r\n        self['activebackground'] = '#181818'\r\n        self['activeforeground'] = 'white'\r\n        self['borderwidth'] = 0\r\n\r\n\r\nclass CardButton(tk.Button):\r\n    def __init__(self, master, *args, **kwargs):\r\n        tk.Button.__init__(self, master, *args, **kwargs)\r\n\r\n        self.bind('<Configure>', self.size)\r\n\r\n        pyglet.font.add_file('fonts/Play/Play-Bold.ttf')\r\n        play = tkfont.Font(family=\"Play\", size=15, weight=\"bold\")\r\n        # print(width)\r\n        self['background'] = '#181818'\r\n        self['height'] = 350\r\n        self['border'] = 0\r\n        self['font'] = play\r\n        self['compound'] = tk.TOP\r\n        self['activebackground'] = '#181818'\r\n        self['foreground'] = 'white'\r\n        self['activeforeground'] = 'white'\r\n\r\n    def size(self, event):\r\n        global width\r\n        self.configure(width=width/4 -14)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Pages/HomePage/Components/HorizontalFrame.py	(revision 7eb6434908ca1554e676a258963c566d3146a355)
+++ Pages/HomePage/Components/HorizontalFrame.py	(date 1586874994982)
@@ -123,3 +123,4 @@
     def size(self, event):
         global width
         self.configure(width=width/4 -14)
+
Index: Base/topLeft.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nfrom Pages.HomePage.Home import Home\r\nfrom Pages.Browse.browse import Browse\r\nfrom tkinter import font\r\nfrom PIL import ImageTk, Image\r\nfrom tkinter.ttk import *\r\n\r\n\r\nclass IconButton(tk.Button):\r\n    def __init__(self, master, controller, text, image, page, *args, **kwargs):\r\n        tk.Button.__init__(self, master, *args, **kwargs)\r\n\r\n        self.appHighlightFont = font.Font(family='lineto circular', size=11, weight='bold')\r\n        self['foreground'] = '#a8a8a8'\r\n        self['background'] = '#121212'\r\n        self['border'] = 0\r\n        self['activebackground'] = '#121212'\r\n        self['activeforeground'] = 'white'\r\n        self['padx'] = 10\r\n        self['pady'] = 5\r\n        self['image'] = image\r\n        self['compound'] = tk.LEFT\r\n        self['text'] = text\r\n        self['anchor'] = tk.W\r\n        self['font'] = self.appHighlightFont\r\n        self['command'] = lambda: controller.show_frame(page)\r\n\r\n\r\nclass NormalButton(tk.Button):\r\n    def __init__(self, master, controller, text, page, *args, **kwargs):\r\n        tk.Button.__init__(self, master, *args, **kwargs)\r\n\r\n        self.appHighlightFont = font.Font(family='lineto circular', size=11, weight='bold')\r\n\r\n        self['foreground'] = '#a8a8a8'\r\n        self['background'] = '#121212'\r\n        self['border'] = 0\r\n        self['activebackground'] = '#121212'\r\n        self['activeforeground'] = 'white'\r\n        self['padx'] = 10\r\n        self['pady'] = 5\r\n        self['text'] = text\r\n        self['anchor'] = tk.W\r\n        self['font'] = self.appHighlightFont\r\n        self['command'] = lambda: controller.show_frame(page)\r\n\r\n\r\nclass TopLeft(tk.Frame):\r\n    def __init__(self, master, *args, **kwargs):\r\n        tk.Frame.__init__(self, master, *args, **kwargs)\r\n        self['background'] = '#121212'\r\n        self.master = master\r\n\r\n        #font\r\n        self.appHighlightFont = font.Font(family='lineto circular', size=12, weight='bold')\r\n        self.appHighlightFont2 = font.Font(family='lineto circular', size=10)\r\n\r\n        #images\r\n        self.home_icon = tk.PhotoImage(file=r\".\\Images\\home.png\")\r\n        self.browse_icon = tk.PhotoImage(file=r\".\\Images\\browse2.png\")\r\n        self.menu_icon = tk.PhotoImage(file=r\".\\Images\\menu2.png\")\r\n\r\n        #frames\r\n        self.frame1 = tk.Frame(self, bg='#121212', padx=10, pady=10)\r\n        self.frame2 = tk.Frame(self, bg='#121212', padx=10)\r\n        self.frame3 = tk.Frame(self, bg='#121212', padx=10)\r\n        self.frame4 = tk.Frame(self, bg='#121212', padx=10)\r\n        self.frame5 = tk.Frame(self, bg='#121212', padx=10)\r\n\r\n        #frame1\r\n        self.menu2 = tk.Menubutton(self.frame1, image=self.menu_icon, background='#121212', activebackground='#121212', bd=0)\r\n        self.menu2.menu = tk.Menu(self.menu2,\r\n                                  tearoff=0,\r\n                                  background='#35363a', activebackground='#35363a',\r\n                                  foreground='#a8a8a8', activeforeground='white',\r\n                                  font=self.appHighlightFont2,\r\n                                  bd=0\r\n                                  )\r\n        self.menu2['menu'] = self.menu2.menu\r\n        self.menu2.menu.add_command(label='File')\r\n        self.menu2.menu.add_command(label='Playback')\r\n        self.menu2.menu.add_command(label='View')\r\n\r\n        #frame2\r\n        self.home = IconButton(self.frame2, master, text='Home', image=self.home_icon, page=Home)\r\n        self.browse = IconButton(self.frame2, master, text='Browse', image=self.browse_icon, page=Browse)\r\n\r\n        #frame3\r\n        self.appHighlightFont = font.Font(family='lineto circular', size=9, weight='bold')\r\n        self.label = tk.Label(self.frame3,\r\n                         text='YOUR LIBRARY',\r\n                         background='#121212',\r\n                         foreground='#a8a8a8',\r\n                         anchor= tk.W,\r\n                         padx = 5,\r\n                         font=self.appHighlightFont\r\n                         )\r\n        self.madeForYou = NormalButton(self.frame3, master, text='Made For You', page='')\r\n        self.recentlyPlayed = NormalButton(self.frame3, master, text='Recently Played', page='')\r\n        self.likedSongs = NormalButton(self.frame3, master, text='Liked Songs', page='')\r\n        self.albums = NormalButton(self.frame3, master, text='Albums', page='')\r\n        self.artists = NormalButton(self.frame3, master, text='Artists', page='')\r\n\r\n        #frame4\r\n        self.label2 = tk.Label(self.frame4,\r\n                              text='PLAYLISTS',\r\n                              background='#121212',\r\n                              foreground='#a8a8a8',\r\n                              anchor=tk.W,\r\n                              padx=5,\r\n                              font=self.appHighlightFont\r\n                              )\r\n\r\n        #frame5\r\n\r\n        #grid - components\r\n        self.menu2.grid(row=0, column=0, sticky=tk.N + tk.S + tk.W + tk.E)\r\n        self.home.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.browse.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.label.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.madeForYou.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.recentlyPlayed.grid(row=2, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.likedSongs.grid(row=3, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.albums.grid(row=4, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.artists.grid(row=5, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.label2.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n\r\n        #grid - frames\r\n        self.frame1.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.frame2.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.frame3.grid(row=2, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.frame4.grid(row=3, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n        self.frame5.grid(row=4, column=0, sticky=tk.N + tk.S + tk.E + tk.W)\r\n\r\n        #grid - row/column\r\n        self.grid_columnconfigure(0, weight=1)\r\n        self.grid_rowconfigure(0, weight=1)\r\n        self.grid_rowconfigure(1, weight=2)\r\n        self.grid_rowconfigure(2, weight=2)\r\n        self.grid_rowconfigure(3, weight=2)\r\n        self.grid_rowconfigure(4, weight=10)\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Base/topLeft.py	(revision 7eb6434908ca1554e676a258963c566d3146a355)
+++ Base/topLeft.py	(date 1586878692944)
@@ -27,7 +27,7 @@
 
 
 class NormalButton(tk.Button):
-    def __init__(self, master, controller, text, page, *args, **kwargs):
+    def __init__(self, master, controller, row, text, page, *args, **kwargs):
         tk.Button.__init__(self, master, *args, **kwargs)
 
         self.appHighlightFont = font.Font(family='lineto circular', size=11, weight='bold')
@@ -44,6 +44,8 @@
         self['font'] = self.appHighlightFont
         self['command'] = lambda: controller.show_frame(page)
 
+        self.grid(row=row, column=0, sticky='nsew')
+
 
 class TopLeft(tk.Frame):
     def __init__(self, master, *args, **kwargs):
@@ -61,21 +63,24 @@
         self.menu_icon = tk.PhotoImage(file=r".\Images\menu2.png")
 
         #frames
-        self.frame1 = tk.Frame(self, bg='#121212', padx=10, pady=10)
-        self.frame2 = tk.Frame(self, bg='#121212', padx=10)
-        self.frame3 = tk.Frame(self, bg='#121212', padx=10)
-        self.frame4 = tk.Frame(self, bg='#121212', padx=10)
-        self.frame5 = tk.Frame(self, bg='#121212', padx=10)
+        self.frame1 = Division(self)
+        self.frame2 = Division(self)
+        self.frame3 = Division(self)
+        self.frame4 = Division(self)
+        self.frame5 = Division(self)
 
         #frame1
-        self.menu2 = tk.Menubutton(self.frame1, image=self.menu_icon, background='#121212', activebackground='#121212', bd=0)
+        self.menu2 = tk.Menubutton(self.frame1, image=self.menu_icon, background='#121212', activebackground='#121212', bd=0 )
         self.menu2.menu = tk.Menu(self.menu2,
                                   tearoff=0,
                                   background='#35363a', activebackground='#35363a',
                                   foreground='#a8a8a8', activeforeground='white',
-                                  font=self.appHighlightFont2,
-                                  bd=0
+                                  # font=self.appHighlightFont2,
+                                  bd=0,
+                                  activeborderwidth=0,
+                                  relief=tk.FLAT
                                   )
+        self.menu2.menu.config(bd=0, activeborderwidth=0, relief=tk.FLAT)
         self.menu2['menu'] = self.menu2.menu
         self.menu2.menu.add_command(label='File')
         self.menu2.menu.add_command(label='Playback')
@@ -95,11 +100,11 @@
                          padx = 5,
                          font=self.appHighlightFont
                          )
-        self.madeForYou = NormalButton(self.frame3, master, text='Made For You', page='')
-        self.recentlyPlayed = NormalButton(self.frame3, master, text='Recently Played', page='')
-        self.likedSongs = NormalButton(self.frame3, master, text='Liked Songs', page='')
-        self.albums = NormalButton(self.frame3, master, text='Albums', page='')
-        self.artists = NormalButton(self.frame3, master, text='Artists', page='')
+        self.madeForYou = NormalButton(self.frame3, master, text='Made For You', page='', row=1)
+        self.recentlyPlayed = NormalButton(self.frame3, master, text='Recently Played', page='', row=2)
+        self.likedSongs = NormalButton(self.frame3, master, text='Liked Songs', page='', row=3)
+        self.albums = NormalButton(self.frame3, master, text='Albums', page='', row=4)
+        self.artists = NormalButton(self.frame3, master, text='Artists', page='', row=5)
 
         #frame4
         self.label2 = tk.Label(self.frame4,
@@ -109,35 +114,32 @@
                               anchor=tk.W,
                               padx=5,
                               font=self.appHighlightFont
-                              )
+                               )
 
-        #frame5
-
         #grid - components
         self.menu2.grid(row=0, column=0, sticky=tk.N + tk.S + tk.W + tk.E)
         self.home.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
         self.browse.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
         self.label.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.madeForYou.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.recentlyPlayed.grid(row=2, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.likedSongs.grid(row=3, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.albums.grid(row=4, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.artists.grid(row=5, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
         self.label2.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
 
-        #grid - frames
-        self.frame1.grid(row=0, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.frame2.grid(row=1, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.frame3.grid(row=2, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.frame4.grid(row=3, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
-        self.frame5.grid(row=4, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
 
         #grid - row/column
         self.grid_columnconfigure(0, weight=1)
         self.grid_rowconfigure(0, weight=1)
-        self.grid_rowconfigure(1, weight=2)
-        self.grid_rowconfigure(2, weight=2)
-        self.grid_rowconfigure(3, weight=2)
+        self.grid_rowconfigure((1, 2, 3), weight=2)
         self.grid_rowconfigure(4, weight=10)
 
 
+class Division(tk.Frame):
+    number = 0
+
+    def __init__(self, master, *args, **kwargs):
+        tk.Frame.__init__(self, master, *args, **kwargs)
+        self['background'] = '#121212'
+        self['padx'] = 10
+        self.grid(row=Division.number, column=0, sticky=tk.N + tk.S + tk.E + tk.W)
+        Division.number += 1
+
+
+
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_09-04-2020_18_46__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_09-04-2020_18_46__Default_Changelist_.xml
